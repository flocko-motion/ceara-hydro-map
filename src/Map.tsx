
import L from "leaflet";
import React from "react";
import {GeoJSON, MapContainer,  Polygon, TileLayer} from "react-leaflet";

import {asyncMunicipalities, atomicFeatures, atomicPoly} from "./App";
import {atom, useRecoilState, useRecoilValue} from "recoil";
import {textState} from "./App";
import {GeoJsonProperties} from "geojson";




const getMultiPolygon = (): [number, number][][] => {
    let a: [number, number][][] = [];
    const lakes = 1000;
    const h = 0.05;
    const w = 0.1;
    const cols = 50;
    const segments = 200;
    const r = 0.003;
    const origin = [51.51, 90.0];
    for (let i = 0; i < lakes; i++) {
        let dy = h * Math.floor(i / cols);
        let dx = w * (i % cols);
        let p: [number, number][] = [];
        for (let j = 0; j < segments; j++) {
            const rad = 2 * Math.PI / segments * j;
            const rMod = r * (1 + 0.2 * Math.sin(rad * 10));
            p[j] = [
                origin[0] + Math.cos(rad) * rMod + dy,
                origin[1] + Math.sin(rad) * rMod + dx
            ]
        }
        a[i] = p;
/*        a[i] = [
            [51.51 + dy, -0.12 + dx],
            [51.51 + dy, -0.13 + dx],
            [51.53 + dy, -0.13 + dx],
        ];*/
    }
    console.log(a);
    return a;
};

let multiPolygon: [number, number][][] = getMultiPolygon();

const polygon: [number, number][] = [
    [51.515, -0.09],
    [51.52, -0.1],
    [51.52, -0.12],
]




const purpleOptions = { color: 'purple' }

let testFeatures: GeoJSON.FeatureCollection<any> = {
    type: 'FeatureCollection',
    features: [
        {
            type: 'Feature',
            geometry: {"type":"Polygon","coordinates":[[[-40.166145482,-3.072537247],[-40.166124021,-3.072415771],[-40.166118969,-3.072321239],[-40.166116764,-3.072279984],[-40.16609528,-3.072137066],[-40.166024104,-3.072065673],[-40.165934009,-3.072048794],[-40.165910325,-3.072044357],[-40.16583925,-3.072065876],[-40.165748273,-3.072065976],[-40.165746507,-3.072031632],[-40.16574585,-3.071921411],[-40.16574264,-3.07188789],[-40.165736829,-3.071858475],[-40.165726313,-3.071817505],[-40.165717407,-3.071793652],[-40.165705994,-3.071772269],[-40.165692817,-3.071752573],[-40.165678492,-3.071735479],[-40.165663429,-3.071721469],[-40.165646794,-3.071710339],[-40.165626209,-3.071700673],[-40.165601939,-3.07169234],[-40.165563792,-3.071681863],[-40.165527657,-3.071674084],[-40.165477033,-3.071667022],[-40.165433633,-3.071664013],[-40.165385444,-3.071665281],[-40.165335382,-3.071670098],[-40.165196286,-3.071688093],[-40.165153674,-3.071690958],[-40.165139595,-3.071690952],[-40.165133649,-3.0716871],[-40.165016416,-3.071623375],[-40.164870439,-3.071557815],[-40.164815553,-3.071652161],[-40.164796896,-3.071699795],[-40.164774789,-3.07170916],[-40.164736854,-3.071729883],[-40.16473658,-3.071730052],[-40.164549301,-3.072292159],[-40.164556892,-3.072333128],[-40.164567102,-3.072377059],[-40.164574558,-3.072401223],[-40.164584098,-3.072421557],[-40.164595708,-3.072436835],[-40.164608617,-3.072447547],[-40.164625319,-3.072457323],[-40.164642538,-3.072464821],[-40.164668919,-3.072519476],[-40.164693682,-3.072522024],[-40.164667184,-3.072585569],[-40.164672115,-3.072616223],[-40.16468382,-3.072658475],[-40.164697413,-3.072688055],[-40.164716653,-3.072714026],[-40.164740565,-3.072736933],[-40.164765402,-3.072752929],[-40.164805161,-3.072771165],[-40.164822527,-3.072777404],[-40.164842872,-3.072782255],[-40.164933378,-3.072795765],[-40.164953733,-3.07280183],[-40.16497078,-3.072809825],[-40.164989689,-3.072823652],[-40.165007882,-3.072842931],[-40.165024719,-3.072866033],[-40.165070063,-3.072936223],[-40.165085989,-3.072955765],[-40.165102036,-3.072971063],[-40.16512983,-3.072993093],[-40.165150668,-3.073006508],[-40.165170931,-3.073015716],[-40.165194741,-3.073023059],[-40.165221967,-3.073028715],[-40.165263745,-3.073034983],[-40.165299449,-3.073037319],[-40.165387201,-3.07303318],[-40.165426826,-3.073035029],[-40.165480338,-3.073041955],[-40.165497144,-3.07304618],[-40.165511538,-3.073051786],[-40.165537676,-3.073067095],[-40.16555132,-3.073079014],[-40.165563673,-3.07309506],[-40.165574221,-3.07311353],[-40.165600456,-3.073166811],[-40.165609893,-3.073181577],[-40.165619776,-3.073193433],[-40.165638261,-3.073210982],[-40.1656597,-3.073228458],[-40.165705429,-3.073259351],[-40.16576448,-3.073329687],[-40.165814515,-3.073365531],[-40.165857408,-3.073401382],[-40.1659003,-3.073437234],[-40.165964628,-3.073480242],[-40.16600752,-3.073516094],[-40.166043263,-3.073544774],[-40.166107575,-3.073573422],[-40.16611871,-3.07357341],[-40.166138657,-3.073579877],[-40.166165927,-3.073582145],[-40.166195436,-3.073580452],[-40.16620668,-3.073579102],[-40.166321843,-3.073573187],[-40.166457547,-3.073573038],[-40.166628962,-3.07357285],[-40.166743192,-3.073529646],[-40.166843137,-3.073486458],[-40.166850217,-3.073429012],[-40.166778747,-3.073386012],[-40.166657274,-3.073335887],[-40.166600081,-3.073285692],[-40.166557172,-3.073235481],[-40.166528541,-3.073178074],[-40.166464175,-3.073099168],[-40.16642129,-3.073070496],[-40.166397661,-3.073067129],[-40.166397867,-3.073064097],[-40.166474116,-3.073025668],[-40.166522134,-3.072912698],[-40.16650132,-3.072858476],[-40.166359063,-3.072801455],[-40.166245236,-3.072737256],[-40.166188281,-3.072665848],[-40.166145482,-3.072537247]]]},
            "properties": {"party": "Republican"},
        },
    ]
};




export function Map() {
        const features = useRecoilValue(atomicFeatures)
        const municipalities:  void | GeoJSON.FeatureCollection<any, GeoJsonProperties> = useRecoilValue(asyncMunicipalities);
    return <MapContainer center={[-5.2, -39.5]} zoom={8} scrollWheelZoom={true} className="Map" crs={L.CRS.EPSG3857}>
            <TileLayer
                attribution='Map tiles by <a href="http://stamen.com">Stamen Design</a>, <a href="http://creativecommons.org/licenses/by/3.0">CC BY 3.0</a> &mdash; Map data &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
                url="https://stamen-tiles-{s}.a.ssl.fastly.net/toner-lite/{z}/{x}/{y}{r}.png"
                minZoom={0}
                maxZoom={20}
                subdomains="abcd"
            />
            {/*          <TileLayer
            attribution='&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
            url="https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png"
        />*/}
            <GeoJSON data={features} pathOptions={purpleOptions} />
            { (municipalities) ? <GeoJSON data={municipalities} pathOptions={purpleOptions} /> : <></>}
        </MapContainer>;
}